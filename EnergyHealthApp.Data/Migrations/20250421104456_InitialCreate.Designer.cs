// <auto-generated />
using EnergyHealthApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnergyHealthApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250421104456_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("EnergyHealthApp.classes.EnergyProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BloodPressure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("HeartRate")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RespiratoryRate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("EnergyProfiles");
                });

            modelBuilder.Entity("EnergyHealthApp.classes.EnergyQuestionnaire", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId");

                    b.ToTable("EnergyQuestionnaires");
                });

            modelBuilder.Entity("EnergyHealthApp.classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnergyHealthApp.classes.EnergyProfile", b =>
                {
                    b.HasOne("EnergyHealthApp.classes.User", "User")
                        .WithOne("EnergyProfile")
                        .HasForeignKey("EnergyHealthApp.classes.EnergyProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnergyHealthApp.classes.EnergyQuestionnaire", b =>
                {
                    b.HasOne("EnergyHealthApp.classes.User", "User")
                        .WithOne("EnergyQuestionnaire")
                        .HasForeignKey("EnergyHealthApp.classes.EnergyQuestionnaire", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnergyHealthApp.classes.User", b =>
                {
                    b.Navigation("EnergyProfile");

                    b.Navigation("EnergyQuestionnaire");
                });
#pragma warning restore 612, 618
        }
    }
}
